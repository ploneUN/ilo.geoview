<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      lang="en"
      metal:use-macro="context/main_template/macros/master"
      i18n:domain="ilo.geoview">
<body>

<tal:comment tal:condition="nothing">
    This is a sample view template. It will not be used for rendering the
    content unless activated by creation of a view class with a matching name.
    
    Note that we're using Plone 4 macros. Replace them with Plone 3 macros
    if needed.
</tal:comment>
      <metal:javascript_head fill-slot="javascript_head_slot">
            <script type="text/javascript" src="https://www.google.com/jsapi"></script>
            <script type="text/javascript">
                  google.load("visualization", "1", {packages:["geochart"]});
                  var options = {};
                  var chart1;
                  var data;
                  function drawRegionsMap(data_array) {
                        data = google.visualization.arrayToDataTable(data_array);
                        
                        //options['dataMode'] = 'regions';
                        options.colors = ['#C7D6D8', '#5F91C0'];
                        
                        options.dataMode = 'regions';
                        //options.showZoomOut = true;
                        //options.zoomOutLabel = 'Zoom Out';
                        options.region = 'world';
                        
                        //options['showZoomOut'] = true;
                        //options['zoomOutLabel'] = 'Zoom Out';
                        var chart = new google.visualization.GeoChart(document.getElementById('regions_div'));
                        chart1 = chart;
                        google.visualization.events.addListener(chart, 'regionClick', zoom);
                        
                        chart.draw(data, options);
                        
                  }function zoom(e){
                        options['region'] = e['region'];
                        
                        chart1.draw(data, options);
                  }
                  
                  
                  
                  function show_world() {
                        options.displayMode = 'regions';
                        options.region = 'world';
                        chart1.draw(data, options);
                  }
                  
                  function set_region(region){
                        //options.displayMode = 'regions';
                        options.region = region;
                        chart1.draw(data, options);
                    }
            
                    function set_marker(){
                        options.displayMode = 'markers';
                        
                        //options.region = 'world';
                        chart1.draw(data, options);
                    }
                    
                    $(document).ready(function(){
                        var data_array = [['Country', 'Count']];
                        $('div.source_elements').each(function(){
                            var sub_array = [];
                            sub_array.push($(this).find('.country').html());
                            sub_array.push(parseInt($(this).find('.population').html().replace(',','')));
                            //sub_array.push($(this).find('.country').html()+': '+$(this).find('.population').html());
                            data_array.push(sub_array);
                        });
                
                        google.setOnLoadCallback(drawRegionsMap(data_array));
                        
                        $('select#set-region').change(function(){
                              set_region($(this).val());
                        })
                      });
            </script>
      </metal:javascript_head>

<metal:main fill-slot="content-core">
  <metal:content-core define-macro="content-core">
      
      <div id="regions_div" style="width: auto; height: 400px;"></div>
      <!--<div style="float:right"><input type='button' onClick='show_world()' value='World View'/></div>-->
      <div style="float:right"><input type='button' onClick='set_marker()' value='Marker'/></div>
      <div style="float: right">
            Set Region:
            <select id='set-region'>
                  <option value='world'>World</option>
                  <option value='035'>Southeast Asia</option>
            </select>
            
      </div>
      <br/>
      <div tal:define="pledges view/map_count" tal:condition="pledges" id='source_data' style="display: none">
      <div tal:repeat="pledge python: pledges" class='source_elements'>
            <span class="country" tal:content="python: pledge['title']">philippines</span>
			<span class="population" tal:content="python: pledge['count']">700,000</span>
      </div>
    </div>

    <!--<tal:block repeat="widget view/widgets/values">
        <div class="field" tal:condition="python:widget.__name__ not in ('IDublinCore.title', 'IDublinCore.description', 'title', 'description',)">
            <label tal:content="widget/label" />
            <br />
            <div tal:content="structure widget/render" />
        </div>
    </tal:block>

    <fieldset tal:repeat="group view/groups"
              tal:attributes="id python:''.join((group.prefix, 'groups.', group.__name__)).replace('.', '-')">
        <legend tal:content="group/label" />
        <div class="field" tal:repeat="widget group/widgets/values">
            <label tal:content="widget/label" />
            <br />
            <div tal:content="structure widget/render" />
        </div>
    </fieldset>

    <fieldset id="folder-listing">
        <legend>Contents</legend>
        <tal:block define="listing_macro context/folder_listing/macros/listing">
            <metal:use_macro use-macro="listing_macro" />
        </tal:block>
    </fieldset>-->

  </metal:content-core>
</metal:main>

</body>
</html>

